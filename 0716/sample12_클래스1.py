'''
    클래스(class)

    1. 등장배경
        객체지향 프로그래밍언어(Object Oriented Programming : OOP 에서 등장한 개념

    2. OOP?
      ==> 객체(object)를 지향해서 프로그램을 개발하는 방법론

    3. 객체(object)?
      ==> 현실세계의 주체(subject, 자신)가 바라보는 사물(대상)을 객체(object)라고 부른다

      예> 모니터, 책상, 키보드, ..., 학생, 강사, ...

      ==> 객체(object)는 2가지 요소로 구성됨,
          - 속성: 객체를 나타내는 특징
          - 동작: 객체의 해우이
        예> 모니터 객체
          - 속성 : 색상, 크기, 제조사,...
          - 동작 : on, off, ...

            락생 객체
          - 속성 : 학번, 이름, 번호
          - 동작 : 공부하기, ...
    4.OOP 기반한 개발 프로세스

    주문 -------> 분석 ---------> 설계 -----> 구현 -----> 테스트 -----> 배포
    학생관리    객체추출
    프로그램    (학생객체,..)--->학생클래스
                -속성:학번,..-->변수
                -동작:... -->메서드(함수)

###############################################################################
python 클래스

1. 클래스 문법

    class 클래스명:     #첫글자 대문자 (Camel표기법)
        pass

2. 클래스 구성요소

    class 클래스명:
        구성요소

    가. 메서드
        - 인스턴스 메서드
        - 클래스 메서드
    나.변수
        - 인스턴스 변수 : 함수내에서 self.변수 형태로 사용
        - 클래스 변수
    다. 생성자

3. 클래스 사용방법
    가. 반드시 객체생성 필요 (**)
        변수명 = 클래스명()

4. 생성자 (constructor)
    ==> '생성자 함수' 라고도 부른다.
    ==> 모든 클래스의 생성자 함수명은 항상 고정

    def __init__(self)
        pass

    __init__() 호출하지 않고
    클래스명() 으로 호출한다.

    stu = Student()  ---> def __init__ 호출한다

    stu = Student()

    --> 생성자 용도 : 객체의 속성 초기화(값을 매처음 저장)
        예> 학생객체의 이름속성 초기화
            학생클래스의 이름변수 초기화
        -> 클래스를 객체생성할 때 속성값(이름,나이,학번)을 저장할 수 있다.

5. 인스턴스 변수
    --> 현실세계의 객체의 속성
    --> self.변수 (인스턴스 변수)
    --> 인스턴스 변수 초기화 최적의 장소는 생성자 이다.

        class Cat:
            def __init__(self, n, n2):
                self.name = n
                self.age = n2

6. (인스턴스) 메서드: 클래스 안에서 만든 함수
    --> 현실세계의 객체의 동작
    --> 함수문법과 동일 + self 필수
        예>
            def 메서드명(self):
                문장


'''