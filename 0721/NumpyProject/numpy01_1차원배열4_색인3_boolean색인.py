import numpy as np

# 1.색인 : 기존 파이썬 문법과 동일
# 2. fancy 색인: 정수 배열 색인 ==> [idx1,idx2,...]
# 3. boolaen 색인: 논리값 배열 색인 ==> [True, False, ..], 벡터연산 기반
v1 = np.arange(5)
v2 = np.arange(5) * 3

print("1. 원본: ", v1, v2)
print("2. 벡터연산: 벡터와 스칼라(산술연산)", (v1+2)) #  [2 3 4 5 6]
print("2. 벡터연산: 벡터와 벡터(산술연산)", (v1+v2)) # [ 0  4  8 12 16]
print("2. 벡터연산: 벡터와 스칼라(비교연산)", v1 == 0) # [ True False False False False]
print("2. 벡터연산: 벡터와 스칼라(비교연산)", v1 > 3) # [False False False False  True]

print("3. boolean 색인:",v1[[True, False, False, True, False]]) # [0 3]

#응용
v1 = np.arange(10,21) # [10 11 12 13 14 15 16 17 18 19 20]
#v1에서 짝수만 출력
print(v1%2==0)
print("짝수값만 출력:", v1[v1%2==0]) #짝수값만 출력: [10 12 14 16 18 20]
print("15보다 큰값만 출력:", v1[v1>15]) #15보다 큰값만 출력: [16 17 18 19 20]

#파이썬의 논리 연산자 (and, or, not) 대신에 (&, |, ~)사용
#v1에서 짝수값이고 15보다 큰값?
print( v1[(v1%2==0) & (v1>=15)]) # [16 18 20]
#v1에서 짝수 이거나 15보다 큰값?
print( v1[(v1%2==0) | (v1>=15)]) # [10 12 14 15 16 17 18 19 20]
#v1에서 홀수값 이거나 15보다 큰값?
print( v1[~(v1%2==0) | (v1>=15)]) # [11 13 15 16 17 18 19 20]
